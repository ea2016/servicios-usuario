#nombre de la aplicacion
spring.application.name=servicios-timetrack

#cadena de conexion con la base de datos
#Se debe subir el jar con el puerto 5432
spring.datasource.url=jdbc:postgresql://localhost:5432/timetrack
#para pruebas usamos el puerto 5433 
#Con el comando: ssh -L 5433:localhost:5432 root@157.180.19.145
#spring.datasource.url=jdbc:postgresql://localhost:5433/timetrack
spring.datasource.username=db_poker
spring.datasource.password=Timetrack2024#

# Driver de PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración de Hibernate (opcional)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#puerto por donde saldrá la aplicación
server.port=8081

spring.security.user.name=admin
spring.security.user.password=123

# Nivel de logueo para ver todos los errores
logging.level.org.springframework=DEBUG
logging.level.org.hibernate=DEBUG
logging.level.org.springframework.web=DEBUG

# Clave secreta para firmar el token JWT (debe ser segura y larga)
jwt.secret=/uP6I1VumsCovGss/WcI4vNjl2AQ5R5ZWNvDjLAshjx7LSDx/as76z6mcM2NRhw+TBbbvRXlwczOV0CI7gYvjw==

# Tiempo de expiración del token (en milisegundos)
jwt.expiration=3600000
#security
#jwt.secret=secret
#jwt.expiration=3600
#
##credenciales correo electronico
#spring.mail.host=smtp.alyhouse.com
#spring.mail.port=587
#spring.mail.protocol = smtp
#spring.mail.username=administracion@alyhouse.com
#spring.mail.password=eCO1.23$
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=5000
#spring.mail.properties.mail.smtp.writetimeout=5000

# Configuración de SMTP con Gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=enriquesuarez1991@gmail.com
spring.mail.password=ohychdgzhxxypzlb
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Opcional: configuración para Swagger UI
springdoc.swagger-ui.path=/swagger-ui.html

# Forzar validación de conexión
spring.datasource.hikari.connection-test-query=SELECT 1

# Opcional pero útil para ver SQLs en consola
spring.jpa.show-sql=true
